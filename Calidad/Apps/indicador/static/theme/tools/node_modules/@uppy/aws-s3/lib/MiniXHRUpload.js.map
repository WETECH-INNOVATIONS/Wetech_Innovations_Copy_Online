{"version":3,"sources":["MiniXHRUpload.js"],"names":["cuid","require","Provider","RequestClient","Socket","emitSocketProgress","getSocketHost","EventTracker","ProgressTimeout","NetworkError","isNetworkError","buildResponseError","xhr","error","Error","data","request","setTypeInBlob","file","dataWithUpdatedType","slice","size","meta","type","module","exports","uppy","opts","validateStatus","status","responseText","response","requests","__queue","uploaderEvents","Object","create","_getOptions","overrides","getState","xhrUpload","headers","uploadFile","id","current","total","getFile","isRemote","_uploadRemoteFile","_uploadLocalFile","_addMetadata","formData","metaFields","Array","isArray","keys","forEach","item","append","_createFormDataUpload","formPost","FormData","name","fieldName","_createBareUpload","_onFileRemoved","fileID","cb","on","_onRetry","targetFileID","_onRetryAll","filesToRetry","_onCancelAll","log","Promise","resolve","reject","XMLHttpRequest","timer","timeout","abort","queuedRequest","done","i18n","seconds","Math","ceil","emit","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","remove","target","body","getResponseData","uploadURL","responseUrlFieldName","uploadResp","getResponseError","open","method","toUpperCase","endpoint","withCredentials","responseType","header","setRequestHeader","run","send","priority","fields","Client","remote","providerOptions","provider","client","post","url","fieldname","metadata","httpMethod","useFormData","then","res","token","host","companionUrl","socket","autoOpen","progressData","errData","resp","message","cause","isPaused","close","catch","err"],"mappings":"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","sourcesContent":["const cuid = require('cuid')\nconst { Provider, RequestClient, Socket } = require('@uppy/companion-client')\nconst emitSocketProgress = require('@uppy/utils/lib/emitSocketProgress')\nconst getSocketHost = require('@uppy/utils/lib/getSocketHost')\nconst EventTracker = require('@uppy/utils/lib/EventTracker')\nconst ProgressTimeout = require('@uppy/utils/lib/ProgressTimeout')\nconst NetworkError = require('@uppy/utils/lib/NetworkError')\nconst isNetworkError = require('@uppy/utils/lib/isNetworkError')\n\n// See XHRUpload\nfunction buildResponseError (xhr, error) {\n  // No error message\n  if (!error) error = new Error('Upload error')\n  // Got an error message string\n  if (typeof error === 'string') error = new Error(error)\n  // Got something else\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), { data: error })\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr)\n    return error\n  }\n\n  error.request = xhr\n  return error\n}\n\n// See XHRUpload\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nmodule.exports = class MiniXHRUpload {\n  constructor (uppy, opts) {\n    this.uppy = uppy\n    this.opts = {\n      validateStatus (status, responseText, response) {\n        return status >= 200 && status < 300\n      },\n      ...opts\n    }\n\n    this.requests = opts.__queue\n    this.uploaderEvents = Object.create(null)\n  }\n\n  _getOptions (file) {\n    const uppy = this.uppy\n\n    const overrides = uppy.getState().xhrUpload\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {}\n    }\n    Object.assign(opts.headers, this.opts.headers)\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers)\n    }\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers)\n    }\n\n    return opts\n  }\n\n  uploadFile (id, current, total) {\n    const file = this.uppy.getFile(id)\n    if (file.error) {\n      throw new Error(file.error)\n    } else if (file.isRemote) {\n      return this._uploadRemoteFile(file, current, total)\n    }\n    return this._uploadLocalFile(file, current, total)\n  }\n\n  _addMetadata (formData, meta, opts) {\n    const metaFields = Array.isArray(opts.metaFields)\n      ? opts.metaFields\n      // Send along all fields by default.\n      : Object.keys(meta)\n    metaFields.forEach((item) => {\n      formData.append(item, meta[item])\n    })\n  }\n\n  _createFormDataUpload (file, opts) {\n    const formPost = new FormData()\n\n    this._addMetadata(formPost, file.meta, opts)\n\n    const dataWithUpdatedType = setTypeInBlob(file)\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType)\n    }\n\n    return formPost\n  }\n\n  _createBareUpload (file, opts) {\n    return file.data\n  }\n\n  _onFileRemoved (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  _onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  _onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', (filesToRetry) => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  _onCancelAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('cancel-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  _uploadLocalFile (file, current, total) {\n    const opts = this._getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n\n      const data = opts.formData\n        ? this._createFormDataUpload(file, opts)\n        : this._createBareUpload(file, opts)\n\n      const xhr = new XMLHttpRequest()\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        xhr.abort()\n        queuedRequest.done()\n        const error = new Error(this.i18n('timedOut', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-error', file, error)\n        reject(error)\n      })\n\n      const id = cuid()\n\n      xhr.upload.addEventListener('loadstart', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total\n          })\n        }\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} finished`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n            uploadURL\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        } else {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n          const response = {\n            status: ev.target.status,\n            body\n          }\n\n          this.uppy.emit('upload-error', file, error, response)\n          return reject(error)\n        }\n      })\n\n      xhr.addEventListener('error', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} errored`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = opts.withCredentials\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      Object.keys(opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, opts.headers[header])\n      })\n\n      const queuedRequest = this.requests.run(() => {\n        xhr.send(data)\n        return () => {\n          timer.done()\n          xhr.abort()\n        }\n      }, { priority: 1 })\n\n      this._onFileRemoved(file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      this._onCancelAll(file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  _uploadRemoteFile (file, current, total) {\n    const opts = this._getOptions(file)\n    return new Promise((resolve, reject) => {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n\n      const fields = {}\n      const metaFields = Array.isArray(opts.metaFields)\n        ? opts.metaFields\n        // Send along all fields by default.\n        : Object.keys(file.meta)\n\n      metaFields.forEach((name) => {\n        fields[name] = file.meta[name]\n      })\n\n      const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n      const client = new Client(this.uppy, file.remote.providerOptions)\n      client.post(file.remote.url, {\n        ...file.remote.body,\n        endpoint: opts.endpoint,\n        size: file.data.size,\n        fieldname: opts.fieldName,\n        metadata: fields,\n        httpMethod: opts.method,\n        useFormData: opts.formData,\n        headers: opts.headers\n      }).then((res) => {\n        const token = res.token\n        const host = getSocketHost(file.remote.companionUrl)\n        const socket = new Socket({ target: `${host}/api/${token}`, autoOpen: false })\n        this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n        this._onFileRemoved(file.id, () => {\n          socket.send('pause', {})\n          queuedRequest.abort()\n          resolve(`upload ${file.id} was removed`)\n        })\n\n        this._onCancelAll(file.id, () => {\n          socket.send('pause', {})\n          queuedRequest.abort()\n          resolve(`upload ${file.id} was canceled`)\n        })\n\n        this._onRetry(file.id, () => {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        })\n\n        this._onRetryAll(file.id, () => {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        })\n\n        socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n        socket.on('success', (data) => {\n          const body = opts.getResponseData(data.response.responseText, data.response)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: data.response.status,\n            body,\n            uploadURL\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n          queuedRequest.done()\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          return resolve()\n        })\n\n        socket.on('error', (errData) => {\n          const resp = errData.response\n          const error = resp\n            ? opts.getResponseError(resp.responseText, resp)\n            : Object.assign(new Error(errData.error.message), { cause: errData.error })\n          this.uppy.emit('upload-error', file, error)\n          queuedRequest.done()\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          reject(error)\n        })\n\n        const queuedRequest = this.requests.run(() => {\n          socket.open()\n          if (file.isPaused) {\n            socket.send('pause', {})\n          }\n\n          return () => socket.close()\n        })\n      }).catch((err) => {\n        this.uppy.emit('upload-error', file, err)\n        reject(err)\n      })\n    })\n  }\n}\n"]}